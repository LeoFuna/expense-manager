name: Deploy project
on:
  push:
    branches:
      - main
      - staging

permissions:
  contents: read
  issues: write

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.1

      - name: Setup node
        uses: actions/setup-node@v4.0.0
        with:
          node-version: '^18.0.0'
          cache: 'npm'

      - name: Install
        run: npm ci

      - uses: actions/cache@v3.3.2
        with:
          path: ./*
          key: ${{ github.sha }}-${{ github.run_number }}
  lint:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v4.1.1

      - name: Setup node
        uses: actions/setup-node@v4.0.0
        with:
          node-version: '^18.0.0'
          cache: 'npm'

      - uses: actions/cache@v3.3.2
        with:
          path: ./*
          key: ${{ github.sha }}-${{ github.run_number }}

      - run: npm run lint

  test:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v4.1.1

      - name: Setup node
        uses: actions/setup-node@v4.0.0
        with:
          node-version: '^18.0.0'
          cache: 'npm'

      - uses: actions/cache@v3.3.2
        with:
          path: ./*
          key: ${{ github.sha }}-${{ github.run_number }}

      - run: npm t

  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set Vercel Args for production
        if: github.ref == 'refs/heads/main'
        run: echo "VERCEL_ARGS=--prod" >> $GITHUB_ENV

      - name: Set Vercel Args for development
        if: github.ref == 'refs/heads/staging'
        run: echo "VERCEL_ARGS=" >> $GITHUB_ENV
        
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: ${{ env.VERCEL_ARGS }}
        env:
          VERCEL_ARGS: ${{ env.VERCEL_ARGS }}
  handle-fail:
    runs-on: ubuntu-latest
    needs: [install, lint, deploy]
    if: failure()
    steps:
    - uses: actions/checkout@v4.1.1

    - name: Check Workflow Status
      run: gh issue create --title "Deploy Failed" --body "Workflow that deploy to Vercel failed. Please check logs."
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
